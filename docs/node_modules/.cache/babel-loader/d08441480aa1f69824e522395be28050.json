{"ast":null,"code":"var _jsxFileName = \"/Users/elizabeth/cs124/lab2/todo-app/src/TaskList.js\",\n    _s = $RefreshSig$();\n\nimport TaskItem from \"./TaskItem\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskList(props) {\n  _s();\n\n  const [isEditing, setEditing] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: props.data.map(t => /*#__PURE__*/_jsxDEV(TaskItem, {\n        taskItem: t,\n        isCompleted: t.isCompleted,\n        taskName: t.taskName,\n        handleChange: props.handleChange\n      }, t.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n}\n\n_s(TaskList, \"tuiZ/XkP3IIihHgOqim00M9Cb2U=\");\n\n_c = TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/Users/elizabeth/cs124/lab2/todo-app/src/TaskList.js"],"names":["TaskItem","useState","TaskList","props","isEditing","setEditing","data","map","t","isCompleted","taskName","handleChange","taskId"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AAEnC,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC;AAGA,sBAAO;AAAA,2BACH;AAAA,gBACCE,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAeC,CAAC,iBACb,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEA,CAApB;AAEU,QAAA,WAAW,EAAEA,CAAC,CAACC,WAFzB;AAGU,QAAA,QAAQ,EAAED,CAAC,CAACE,QAHtB;AAIU,QAAA,YAAY,EAAIP,KAAK,CAACQ;AAJhC,SACeH,CAAC,CAACI,MADjB;AAAA;AAAA;AAAA;AAAA,cADH;AADD;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAYH;;GAjBuBV,Q;;KAAAA,Q","sourcesContent":["import TaskItem from \"./TaskItem\";\nimport {useState} from \"react\";\n\nexport default function TaskList(props){\n\n    const [isEditing, setEditing] = useState(false);\n\n\n    return <table>\n        <tbody>\n        {props.data.map(t =>\n            <TaskItem taskItem={t}\n                      key={t.taskId}\n                      isCompleted={t.isCompleted}\n                      taskName={t.taskName}\n                      handleChange = {props.handleChange}\n            />\n        )}\n        </tbody>\n    </table>\n}\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/elizabeth/cs124/lab2/cs124-lab2/src/DataContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport App from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DataContainer(props) {\n  _s();\n\n  const [data, setData] = useState(props.data);\n\n  function changeName(id, newName) {\n    setData(data.map(task => task.taskId === id ? { ...task,\n      taskName: newName\n    } : task));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(App, {\n      data: data,\n      changeName: changeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), data.map(task => task.taskName)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DataContainer, \"LItpdQ7OP01Fmze2eeWNFe8581A=\");\n\n_c = DataContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataContainer\");","map":{"version":3,"sources":["/Users/elizabeth/cs124/lab2/cs124-lab2/src/DataContainer.js"],"names":["useState","App","DataContainer","props","data","setData","changeName","id","newName","map","task","taskId","taskName"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AACzC,QAAK,CAACC,IAAD,EAAOC,OAAP,IAAiBL,QAAQ,CAACG,KAAK,CAACC,IAAP,CAA9B;;AAEA,WAASE,UAAT,CAAoBC,EAApB,EAAwBC,OAAxB,EAAiC;AAC7BH,IAAAA,OAAO,CAACD,IAAI,CAACK,GAAL,CAASC,IAAI,IAAIA,IAAI,CAACC,MAAL,KAAgBJ,EAAhB,GAAqB,EAAC,GAAGG,IAAJ;AAAUE,MAAAA,QAAQ,EAAEJ;AAApB,KAArB,GAAkDE,IAAnE,CAAD,CAAP;AACH;;AAID,sBACI;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,IAAI,EAAEN,IAAX;AAAiB,MAAA,UAAU,EAAEE;AAA7B;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKF,IAAI,CAACK,GAAL,CAASC,IAAI,IAAIA,IAAI,CAACE,QAAtB,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAfuBV,a;;KAAAA,a","sourcesContent":["import {useState} from \"react\";\nimport App from \"./App\";\n\nexport default function DataContainer(props) {\n    const[data, setData]= useState(props.data)\n\n    function changeName(id, newName) {\n        setData(data.map(task => task.taskId === id ? {...task, taskName: newName}:task));\n    }\n\n\n\n    return (\n        <div>\n            <App data={data} changeName={changeName}></App>\n            {data.map(task => task.taskName)}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
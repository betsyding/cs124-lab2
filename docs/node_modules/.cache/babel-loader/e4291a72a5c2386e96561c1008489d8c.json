{"ast":null,"code":"var _jsxFileName = \"/Users/elizabeth/cs124/lab2/todo-app/src/TaskItem.js\";\nimport './DataContainer';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskItem(props) {\n  const task = props.taskItem; // console.log(task.taskId, props.editedID)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: props.isCompleted,\n      id: props.taskId,\n      onChange: e => props.handleChange(task.taskId, \"isCompleted\", e.target.checked)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"newItem isEditing\",\n      type: \"text\",\n      value: props.taskName,\n      id: props.taskId,\n      onChange: e => props.handleChange(task.taskId, \"taskName\", e.target.value),\n      onFocus: e => props.setEditedID(task.taskId),\n      contentEditable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n}\n_c = TaskItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"sources":["/Users/elizabeth/cs124/lab2/todo-app/src/TaskItem.js"],"names":["useState","TaskItem","props","task","taskItem","isCompleted","taskId","e","handleChange","target","checked","taskName","value","setEditedID"],"mappings":";AAAA,OAAO,iBAAP;AACA,SAAQA,QAAR,QAAuB,OAAvB;;AAGA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpC,QAAMC,IAAI,GAAGD,KAAK,CAACE,QAAnB,CADoC,CAGpC;;AACA,sBAAO;AAAA,4BACH;AACI,MAAA,IAAI,EAAG,UADX;AAEI,MAAA,OAAO,EAAIF,KAAK,CAACG,WAFrB;AAGI,MAAA,EAAE,EAAIH,KAAK,CAACI,MAHhB;AAII,MAAA,QAAQ,EAAGC,CAAD,IACNL,KAAK,CAACM,YAAN,CAAmBL,IAAI,CAACG,MAAxB,EAAgC,aAAhC,EAA+CC,CAAC,CAACE,MAAF,CAASC,OAAxD;AALR;AAAA;AAAA;AAAA;AAAA,YADG,eASH;AAAM,MAAA,SAAS,EAAG,mBAAlB;AAAsC,MAAA,IAAI,EAAG,MAA7C;AAAoD,MAAA,KAAK,EAAIR,KAAK,CAACS,QAAnE;AAA6E,MAAA,EAAE,EAAIT,KAAK,CAACI,MAAzF;AACO,MAAA,QAAQ,EAAGC,CAAD,IAAML,KAAK,CAACM,YAAN,CAAmBL,IAAI,CAACG,MAAxB,EAAgC,UAAhC,EAA4CC,CAAC,CAACE,MAAF,CAASG,KAArD,CADvB;AAEO,MAAA,OAAO,EAAKL,CAAD,IAAML,KAAK,CAACW,WAAN,CAAkBV,IAAI,CAACG,MAAvB,CAFxB;AAEwD,MAAA,eAAe;AAFvE;AAAA;AAAA;AAAA;AAAA,YATG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAiBH;KArBuBL,Q","sourcesContent":["import './DataContainer'\nimport {useState} from \"react\";\n\n\nexport default function TaskItem(props) {\n    const task = props.taskItem;\n\n    // console.log(task.taskId, props.editedID)\n    return <div>\n        <input\n            type = \"checkbox\"\n            checked = {props.isCompleted}\n            id = {props.taskId}\n            onChange={(e) =>\n                props.handleChange(task.taskId, \"isCompleted\", e.target.checked)}\n        />\n\n        <span className = \"newItem isEditing\" type = \"text\" value = {props.taskName} id = {props.taskId}\n               onChange={(e)=> props.handleChange(task.taskId, \"taskName\", e.target.value)}\n               onFocus = {(e)=> props.setEditedID(task.taskId)} contentEditable/>\n\n       {/*{task.taskId === props.editedID?:*/}\n       {/*     <input type = \"text\"/>*/}\n        {/*     : <div/>}*/}\n    </div>\n}"]},"metadata":{},"sourceType":"module"}
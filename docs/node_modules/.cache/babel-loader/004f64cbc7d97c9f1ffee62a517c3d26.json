{"ast":null,"code":"var _jsxFileName = \"/Users/elizabeth/cs124/lab2/todo-app/src/TaskItem.js\",\n    _s = $RefreshSig$();\n\nimport './DataContainer';\nimport { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskItem(props) {\n  _s();\n\n  const task = props.taskItem;\n  const taskInputRef = useRef(null);\n  useEffect(() => {\n    if (taskInputRef.current && task.taskId === props.editedID) {\n      taskInputRef.current.focus();\n    }\n  }, [props.editedID, task, taskInputRef.current]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tablebody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: props.isCompleted,\n          id: props.taskId,\n          onChange: e => props.handleChange(task.taskId, \"isCompleted\", e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), task.taskId === props.editedID ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"newItem isEditing\",\n          type: \"text\",\n          value: props.taskName,\n          id: props.taskId,\n          onChange: e => props.handleChange(task.taskId, \"taskName\", e.target.value),\n          onBlur: () => props.setEditedID(null),\n          onKeyPress: e => e.key === \"Enter\" && props.setEditedID(null),\n          ref: taskInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"label\",\n          onClick: () => props.setEditedID(task.taskId),\n          children: task.taskName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), \"/>\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 13\n  }, this);\n}\n\n_s(TaskItem, \"/yT8mHR0bIQR56R7EhhTSSGHTPI=\");\n\n_c = TaskItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"sources":["/Users/elizabeth/cs124/lab2/todo-app/src/TaskItem.js"],"names":["useEffect","useRef","TaskItem","props","task","taskItem","taskInputRef","current","taskId","editedID","focus","isCompleted","e","handleChange","target","checked","taskName","value","setEditedID","key"],"mappings":";;;AAAA,OAAO,iBAAP;AACA,SAAQA,SAAR,EAAmBC,MAAnB,QAAgC,OAAhC;;AAGA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpC,QAAMC,IAAI,GAAGD,KAAK,CAACE,QAAnB;AACA,QAAMC,YAAY,GAAGL,MAAM,CAAC,IAAD,CAA3B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,YAAY,CAACC,OAAb,IAAwBH,IAAI,CAACI,MAAL,KAAgBL,KAAK,CAACM,QAAlD,EAA4D;AACxDH,MAAAA,YAAY,CAACC,OAAb,CAAqBG,KAArB;AACH;AACJ,GAJQ,EAIN,CAACP,KAAK,CAACM,QAAP,EAAiBL,IAAjB,EAAuBE,YAAY,CAACC,OAApC,CAJM,CAAT;AAMA,sBAAQ;AAAA,4BACJ;AAAA,6BACI;AAAA,gCACI;AACJ,UAAA,IAAI,EAAG,UADH;AAEJ,UAAA,OAAO,EAAIJ,KAAK,CAACQ,WAFb;AAGJ,UAAA,EAAE,EAAIR,KAAK,CAACK,MAHR;AAIJ,UAAA,QAAQ,EAAGI,CAAD,IACNT,KAAK,CAACU,YAAN,CAAmBT,IAAI,CAACI,MAAxB,EAAgC,aAAhC,EAA+CI,CAAC,CAACE,MAAF,CAASC,OAAxD;AALA;AAAA;AAAA;AAAA;AAAA,gBADJ,EASIX,IAAI,CAACI,MAAL,KAAgBL,KAAK,CAACM,QAAtB,gBACI;AACI,UAAA,SAAS,EAAG,mBADhB;AAEI,UAAA,IAAI,EAAG,MAFX;AAGI,UAAA,KAAK,EAAIN,KAAK,CAACa,QAHnB;AAG6B,UAAA,EAAE,EAAIb,KAAK,CAACK,MAHzC;AAII,UAAA,QAAQ,EAAGI,CAAD,IAAMT,KAAK,CAACU,YAAN,CAAmBT,IAAI,CAACI,MAAxB,EAAgC,UAAhC,EAA4CI,CAAC,CAACE,MAAF,CAASG,KAArD,CAJpB;AAKI,UAAA,MAAM,EAAI,MAAMd,KAAK,CAACe,WAAN,CAAkB,IAAlB,CALpB;AAMI,UAAA,UAAU,EAAKN,CAAD,IAAKA,CAAC,CAACO,GAAF,KAAU,OAAV,IAAqBhB,KAAK,CAACe,WAAN,CAAkB,IAAlB,CAN5C;AAOI,UAAA,GAAG,EAAIZ;AAPX;AAAA;AAAA;AAAA;AAAA,gBADJ,gBASM;AAAK,UAAA,EAAE,EAAC,OAAR;AAAgB,UAAA,OAAO,EAAG,MAAMH,KAAK,CAACe,WAAN,CAAkBd,IAAI,CAACI,MAAvB,CAAhC;AAAA,oBAAiEJ,IAAI,CAACY;AAAtE;AAAA;AAAA;AAAA;AAAA,gBAlBV;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADI;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AA4BH;;GAtCuBd,Q;;KAAAA,Q","sourcesContent":["import './DataContainer'\nimport {useEffect, useRef} from \"react\";\n\n\nexport default function TaskItem(props) {\n    const task = props.taskItem;\n    const taskInputRef = useRef(null);\n\n    useEffect(() => {\n        if (taskInputRef.current && task.taskId === props.editedID) {\n            taskInputRef.current.focus();\n        }\n    }, [props.editedID, task, taskInputRef.current]);\n\n    return (<div>\n        <table>\n            <tablebody>\n                <input\n            type = \"checkbox\"\n            checked = {props.isCompleted}\n            id = {props.taskId}\n            onChange={(e) =>\n                props.handleChange(task.taskId, \"isCompleted\", e.target.checked)}/>\n\n            {\n                task.taskId === props.editedID?\n                    <input\n                        className = \"newItem isEditing\"\n                        type = \"text\"\n                        value = {props.taskName} id = {props.taskId}\n                        onChange={(e)=> props.handleChange(task.taskId, \"taskName\", e.target.value)}\n                        onBlur = {() => props.setEditedID(null)}\n                        onKeyPress = {(e)=>e.key === \"Enter\" && props.setEditedID(null)}\n                        ref = {taskInputRef}/>\n                    : <div id=\"label\" onClick ={() => props.setEditedID(task.taskId)}>{task.taskName}</div>\n            }\n            </tablebody>\n        </table>\n        />\n\n\n    </div>)\n}"]},"metadata":{},"sourceType":"module"}